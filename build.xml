<!--
// *******************************************************************************
// * Copyright (C)2014, International Business Machines Corporation and *
// * others. All Rights Reserved. *
// *******************************************************************************
-->

<project name="streamsx.watsoniot" default="all" basedir=".">

	<description>
        Build file for streamsx.watsoniot project, builds the toolkits and samples.
    </description>

	<property environment="env" />
	<property name="streams.install" value="${env.STREAMS_INSTALL}" />
	<property name="device.toolkit" location="com.ibm.streamsx.watsoniot.device" />
	<property name="application.toolkit" location="com.ibm.streamsx.watsoniot.application" />
	<property name="tmp" location="tmp" />

	<target name="all" depends="toolkits, buildsamples" />

	<target name="setcommitversion">
		<!-- Create the time stamp -->
		<tstamp />

		<!-- Extract the git commit hash -->
		<exec executable="git" outputproperty="commithash">
			<arg value="rev-parse" />
			<arg value="--short" />
			<arg value="HEAD" />
		</exec>

		<!-- Update the info.xml -->
		<replace file="${device.toolkit}/info.xml" token="__dev__" value="commit_${commithash}" summary="yes" />
		<replace file="${application.toolkit}/info.xml" token="__dev__" value="commit_${commithash}" summary="yes" />

		<!-- Extract info from the toolkit's info.xml -->
		<xmlproperty file="${device.toolkit}/info.xml" prefix="devicetkinfo" keepRoot="no" />
		<xmlproperty file="${application.toolkit}/info.xml" prefix="applicationtkinfo" keepRoot="no" />
		<echo message="device toolkit Version: ${devicetkinfo.info:identity.info:version}" />
		<echo message="application toolkit Version: ${applicationtkinfo.info:identity.info:version}" />
		<echo message="git Hash: ${commithash}" />
	</target>

	<target name="revertversion">
		<exec executable="git">
			<arg value="checkout" />
			<arg value="--" />
			<arg value="${device.toolkit}/info.xml" />
		</exec>
	</target>

	<target name="clean" depends="cleansamples" description="clean up">
		<ant dir="${device.toolkit}" target="clean" />
		<ant dir="${application.toolkit}" target="clean" />
		<delete dir="${tmp}" />
		<delete dir="doc" />
	</target>

	<target name="toolkits" description="Build Java code and index the toolkits.">
		<ant dir="${device.toolkit}" target="all" />
		<ant dir="${application.toolkit}" target="all" />
	</target>
	
	<target name="toolkitsIndexOnly" description="Index the toolkits.">
		<property name="pom.file" value="pom.xml" />
		<ant dir="${device.toolkit}" target="toolkit" />
		<ant dir="${application.toolkit}" target="toolkit" />
	</target>

	<target name="spldoc" depends="all" >
          <exec executable="/bin/bash">
            <arg value="${basedir}/spldoc.sh"/>
          </exec>
	</target>

	<target name="cleansamples">
		<subant target="clean" >
			<dirset dir="samples" includes="*" includesfile="build.xml" />
		</subant>
	</target>

	<target name="buildsamples">
		<subant target="build" >
			<dirset dir="samples" includes="*" includesfile="build.xml" />
		</subant>
	</target>

	<target name="indextoolkit">
		<echo message="Toolkit to index: ${basedir}" />
		<exec executable="${streams.install}/bin/spl-make-toolkit">
			<arg value="--directory" />
			<arg value="${basedir}" />
		</exec>
	</target>

	<target name="cleantoolkit">
		<echo message="Toolkit to clean: ${basedir}" />
		<exec executable="${streams.install}/bin/spl-make-toolkit">
			<arg value="--clean" />
			<arg value="--directory" />
			<arg value="${basedir}" />
		</exec>
	</target>

	<target name="release" depends="clean, all, spldoc, toolkitsIndexOnly">		
		<mkdir dir="${tmp}" />
		<property name="releasefilename" value="${tmp}/streamsx.watsoniot.toolkits-${tkinfo.info:identity.info:version}-${DSTAMP}-${TSTAMP}.tgz" />
		<tar compression="gzip" longfile="gnu"
             destfile="${releasefilename}"
    	     basedir="${basedir}"
             includes="${tkinfo.info:identity.info:name}/** samples/** samples/**/.settings/**"
             excludes="**/.gitignore **/.project **/.classpath ${tkinfo.info:identity.info:name}/.settings/**"
    	/>		
		<checksum file="${releasefilename}" />
		<checksum algorithm="sha1" file="${releasefilename}" />
	</target>

</project>
